@top[name=Program] { expression* }

@skip { whitespace | LineComment | Ignored }
expression { Boolean | Nil | Deref | Symbol | Number | Keyword | List | Vector | Map | Set | String | RegExp }
Ignored { IgnoreNext expression }
List { "(" expression* ")" }
Vector { "[" expression* "]" }
Map { "{" (expression expression)* "}" }
Set { "#{" expression* "}" }

@tokens {
  whitespace { (std.whitespace | ",")+ }

  LineComment { ";" ![\n]* }
  IgnoreNext { "#_" }

  identifierChar { std.asciiLetter | $[_='/?!*+\-$\u{a1}-\u{10ff}] }

  Deref { "@" }
  Symbol { identifierChar (identifierChar | std.digit | ":")* }
  Keyword { (":" Symbol | "::" Symbol | ":" Symbol "/" Symbol) }

  Number {
    (std.digit+ ("." std.digit*)? | "." std.digit+) (("e" | "E") (" +" | "-")? std.digit+)? |
    "0x" (std.digit | $[a-fA-F])+ |
    "0b" $[01]+ |
    "0o" $[0-7]+
  }

  String {
    '"' (![\\\n"] | "\\" _)* '"'?
  }

  RegExp { "#" '"' (![\\\n"] | "\\" _)* '"'? }

  "#{" "(" ")" "[" "]" "{" "}"

}


Boolean { @specialize<Symbol, "true" | "false"> }
Nil { @specialize<Symbol, "nil"> }


@detectDelim
