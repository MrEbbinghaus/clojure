# Add
(+ 1 2)
==>
Program(List(Symbol,Number,Number))

# Literals
() {} [] #{} #"\d"
==>
Program(List, Map, Vector, Set, RegExp)

# Symbols
'hello +world _what $test' what? test*
==>
Program(Symbol,Symbol,Symbol,Symbol,Symbol,Symbol)

# Keywords
:hi :hi/ho ::ho
==>
Program(Keyword,Keyword,Keyword)

# Boolean
true false
==>
Program(Boolean,Boolean)

# Nil
nil
==>
Program(Nil)

# Line comments
;; comment
;; another comment
==>
Program(LineComment, LineComment)

# Ignore next form
:hello #_ :ignored
==>
Program(Keyword, IgnoredExpression(Keyword))

# Destructuring
(let [{:keys [hello]} world]
  world)
==>
Program(List(Symbol,Vector(Map(Keyword, Vector(Symbol)), Symbol) Symbol))
